// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Bing.Commerce.Search.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    /// <summary>
    /// Defines a filter aggregation.
    /// </summary>
    [Newtonsoft.Json.JsonObject("Filter")]
    public partial class RequestFilter : RequestAggregationBase
    {
        /// <summary>
        /// Initializes a new instance of the RequestFilter class.
        /// </summary>
        public RequestFilter()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the RequestFilter class.
        /// </summary>
        /// <param name="name">A label that you specify for your aggregations,
        /// which the API passes through and returns with the response.</param>
        /// <param name="aggregations">A list of child aggregations.</param>
        /// <param name="value">The condition to match for the
        /// aggregation.</param>
        public RequestFilter(string name = default(string), IList<RequestAggregationBase> aggregations = default(IList<RequestAggregationBase>), ConditionBase value = default(ConditionBase), bool? includeCustomizations = default(bool?))
            : base(name, aggregations)
        {
            Value = value;
            IncludeCustomizations = includeCustomizations;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the condition to match for the aggregation.
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public ConditionBase Value { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "includeCustomizations")]
        public bool? IncludeCustomizations { get; set; }

    }
}
