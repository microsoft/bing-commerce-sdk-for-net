// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Bing.Commerce.Search.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines an equivalence condition for a string field. It can appear in a
    /// filter, a boost, or a filter aggregation.
    /// </summary>
    public partial class StringCondition : EquivalenceConditionBase
    {
        /// <summary>
        /// Initializes a new instance of the StringCondition class.
        /// </summary>
        public StringCondition()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the StringCondition class.
        /// </summary>
        /// <param name="field">The name of the field.</param>
        /// <param name="operatorProperty">Possible values include: 'Eq',
        /// 'Ne'</param>
        /// <param name="value">The value to compare the field against.</param>
        public StringCondition(string field = default(string), EquivalenceOperator? operatorProperty = default(EquivalenceOperator?), string value = default(string))
            : base(field, operatorProperty)
        {
            Value = value;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the value to compare the field against.
        /// </summary>
        [JsonProperty(PropertyName = "value")]
        public string Value { get; set; }

    }
}
