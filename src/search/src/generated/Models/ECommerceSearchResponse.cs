// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Bing.ECommerce.Search.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    [Newtonsoft.Json.JsonObject("SearchResponse")]
    public partial class ECommerceSearchResponse : ResponseTask
    {
        /// <summary>
        /// Initializes a new instance of the ECommerceSearchResponse class.
        /// </summary>
        public ECommerceSearchResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ECommerceSearchResponse class.
        /// </summary>
        public ECommerceSearchResponse(IList<ResponseError> errors = default(IList<ResponseError>), IList<ResponseDebugInfo> debug = default(IList<ResponseDebugInfo>), string impressionId = default(string), ResponseQueryContext queryContext = default(ResponseQueryContext), ResponseItemsBase items = default(ResponseItemsBase), IList<ResponseAggregation> aggregations = default(IList<ResponseAggregation>), string redirectUrl = default(string), ResponseCustomization customization = default(ResponseCustomization))
            : base(errors, debug)
        {
            ImpressionId = impressionId;
            QueryContext = queryContext;
            Items = items;
            Aggregations = aggregations;
            RedirectUrl = redirectUrl;
            Customization = customization;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "impressionId")]
        public string ImpressionId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "queryContext")]
        public ResponseQueryContext QueryContext { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "items")]
        public ResponseItemsBase Items { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "aggregations")]
        public IList<ResponseAggregation> Aggregations { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "redirectUrl")]
        public string RedirectUrl { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "customization")]
        public ResponseCustomization Customization { get; set; }

    }
}
