// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Bing.ECommerce.Ingestion.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class ResponseIndex : Index
    {
        /// <summary>
        /// Initializes a new instance of the ResponseIndex class.
        /// </summary>
        public ResponseIndex()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the ResponseIndex class.
        /// </summary>
        /// <param name="searchScenario">Possible values include: 'Unknown',
        /// 'Retail', 'Document', 'Hotel'</param>
        /// <param name="provisioningState">Possible values include: 'Unknown',
        /// 'NotStarted', 'Provisioning', 'Deprovisioning', 'Succeeded',
        /// 'Failed'</param>
        public ResponseIndex(string name = default(string), string description = default(string), IList<Region?> regions = default(IList<Region?>), string searchScenario = default(string), IList<string> searchServices = default(IList<string>), string schemaVersion = default(string), IList<IndexField> fields = default(IList<IndexField>), string id = default(string), string provisioningState = default(string), string createdDateTime = default(string))
            : base(name, description, regions, searchScenario, searchServices, schemaVersion, fields)
        {
            Id = id;
            ProvisioningState = provisioningState;
            CreatedDateTime = createdDateTime;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public string Id { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'Unknown', 'NotStarted',
        /// 'Provisioning', 'Deprovisioning', 'Succeeded', 'Failed'
        /// </summary>
        [JsonProperty(PropertyName = "provisioningState")]
        public string ProvisioningState { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdDateTime")]
        public string CreatedDateTime { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public override void Validate()
        {
            base.Validate();
        }
    }
}
