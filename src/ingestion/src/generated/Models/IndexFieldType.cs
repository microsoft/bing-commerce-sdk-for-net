// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Bing.Commerce.Ingestion.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for IndexFieldType.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum IndexFieldType
    {
        [EnumMember(Value = "Unknown")]
        Unknown,
        [EnumMember(Value = "String")]
        String,
        [EnumMember(Value = "Boolean")]
        Boolean,
        [EnumMember(Value = "Number")]
        Number,
        [EnumMember(Value = "ProductId")]
        ProductId,
        [EnumMember(Value = "DupId")]
        DupId,
        [EnumMember(Value = "StaticRank")]
        StaticRank,
        [EnumMember(Value = "Url")]
        Url,
        [EnumMember(Value = "ImageUrl")]
        ImageUrl,
        [EnumMember(Value = "Title")]
        Title,
        [EnumMember(Value = "Description")]
        Description,
        [EnumMember(Value = "Category")]
        Category,
        [EnumMember(Value = "Price")]
        Price,
        [EnumMember(Value = "Rating")]
        Rating,
        [EnumMember(Value = "Brand")]
        Brand,
        [EnumMember(Value = "Model")]
        Model,
        [EnumMember(Value = "Color")]
        Color,
        [EnumMember(Value = "Size")]
        Size,
        [EnumMember(Value = "Material")]
        Material,
        [EnumMember(Value = "Gender")]
        Gender,
        [EnumMember(Value = "AgeGroup")]
        AgeGroup,
        [EnumMember(Value = "Array")]
        Array,
        [EnumMember(Value = "Dictionary")]
        Dictionary,
        [EnumMember(Value = "ExcludeFlag")]
        ExcludeFlag,
        [EnumMember(Value = "Identifier")]
        Identifier,
        [EnumMember(Value = "Object")]
        Object,
        [EnumMember(Value = "DocumentId")]
        DocumentId,
        [EnumMember(Value = "Author")]
        Author,
        [EnumMember(Value = "CreatedAt")]
        CreatedAt,
        [EnumMember(Value = "ModifiedAt")]
        ModifiedAt,
        [EnumMember(Value = "Paragraph")]
        Paragraph,
        [EnumMember(Value = "SubHeading")]
        SubHeading,
        [EnumMember(Value = "SectionHeader")]
        SectionHeader,
        [EnumMember(Value = "Address")]
        Address,
        [EnumMember(Value = "RatingCount")]
        RatingCount,
        [EnumMember(Value = "ReviewCount")]
        ReviewCount,
        [EnumMember(Value = "RatingScale")]
        RatingScale,
        [EnumMember(Value = "Amenities")]
        Amenities,
        [EnumMember(Value = "StreetAddress")]
        StreetAddress,
        [EnumMember(Value = "Locality")]
        Locality,
        [EnumMember(Value = "SubRegion")]
        SubRegion,
        [EnumMember(Value = "AddressRegion")]
        AddressRegion,
        [EnumMember(Value = "PostalCode")]
        PostalCode,
        [EnumMember(Value = "PostOfficeBoxNumber")]
        PostOfficeBoxNumber,
        [EnumMember(Value = "Country")]
        Country,
        [EnumMember(Value = "CountryIso")]
        CountryIso,
        [EnumMember(Value = "Neighborhood")]
        Neighborhood,
        [EnumMember(Value = "OtherAreas")]
        OtherAreas,
        [EnumMember(Value = "PhoneNumber")]
        PhoneNumber,
        [EnumMember(Value = "Barcode")]
        Barcode,
        [EnumMember(Value = "SecondaryImageUrls")]
        SecondaryImageUrls
    }
    internal static class IndexFieldTypeEnumExtension
    {
        internal static string ToSerializedValue(this IndexFieldType? value)
        {
            return value == null ? null : ((IndexFieldType)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this IndexFieldType value)
        {
            switch( value )
            {
                case IndexFieldType.Unknown:
                    return "Unknown";
                case IndexFieldType.String:
                    return "String";
                case IndexFieldType.Boolean:
                    return "Boolean";
                case IndexFieldType.Number:
                    return "Number";
                case IndexFieldType.ProductId:
                    return "ProductId";
                case IndexFieldType.DupId:
                    return "DupId";
                case IndexFieldType.StaticRank:
                    return "StaticRank";
                case IndexFieldType.Url:
                    return "Url";
                case IndexFieldType.ImageUrl:
                    return "ImageUrl";
                case IndexFieldType.Title:
                    return "Title";
                case IndexFieldType.Description:
                    return "Description";
                case IndexFieldType.Category:
                    return "Category";
                case IndexFieldType.Price:
                    return "Price";
                case IndexFieldType.Rating:
                    return "Rating";
                case IndexFieldType.Brand:
                    return "Brand";
                case IndexFieldType.Model:
                    return "Model";
                case IndexFieldType.Color:
                    return "Color";
                case IndexFieldType.Size:
                    return "Size";
                case IndexFieldType.Material:
                    return "Material";
                case IndexFieldType.Gender:
                    return "Gender";
                case IndexFieldType.AgeGroup:
                    return "AgeGroup";
                case IndexFieldType.Array:
                    return "Array";
                case IndexFieldType.Dictionary:
                    return "Dictionary";
                case IndexFieldType.ExcludeFlag:
                    return "ExcludeFlag";
                case IndexFieldType.Identifier:
                    return "Identifier";
                case IndexFieldType.Object:
                    return "Object";
                case IndexFieldType.DocumentId:
                    return "DocumentId";
                case IndexFieldType.Author:
                    return "Author";
                case IndexFieldType.CreatedAt:
                    return "CreatedAt";
                case IndexFieldType.ModifiedAt:
                    return "ModifiedAt";
                case IndexFieldType.Paragraph:
                    return "Paragraph";
                case IndexFieldType.SubHeading:
                    return "SubHeading";
                case IndexFieldType.SectionHeader:
                    return "SectionHeader";
                case IndexFieldType.Address:
                    return "Address";
                case IndexFieldType.RatingCount:
                    return "RatingCount";
                case IndexFieldType.ReviewCount:
                    return "ReviewCount";
                case IndexFieldType.RatingScale:
                    return "RatingScale";
                case IndexFieldType.Amenities:
                    return "Amenities";
                case IndexFieldType.StreetAddress:
                    return "StreetAddress";
                case IndexFieldType.Locality:
                    return "Locality";
                case IndexFieldType.SubRegion:
                    return "SubRegion";
                case IndexFieldType.AddressRegion:
                    return "AddressRegion";
                case IndexFieldType.PostalCode:
                    return "PostalCode";
                case IndexFieldType.PostOfficeBoxNumber:
                    return "PostOfficeBoxNumber";
                case IndexFieldType.Country:
                    return "Country";
                case IndexFieldType.CountryIso:
                    return "CountryIso";
                case IndexFieldType.Neighborhood:
                    return "Neighborhood";
                case IndexFieldType.OtherAreas:
                    return "OtherAreas";
                case IndexFieldType.PhoneNumber:
                    return "PhoneNumber";
                case IndexFieldType.Barcode:
                    return "Barcode";
                case IndexFieldType.SecondaryImageUrls:
                    return "SecondaryImageUrls";
            }
            return null;
        }

        internal static IndexFieldType? ParseIndexFieldType(this string value)
        {
            switch( value )
            {
                case "Unknown":
                    return IndexFieldType.Unknown;
                case "String":
                    return IndexFieldType.String;
                case "Boolean":
                    return IndexFieldType.Boolean;
                case "Number":
                    return IndexFieldType.Number;
                case "ProductId":
                    return IndexFieldType.ProductId;
                case "DupId":
                    return IndexFieldType.DupId;
                case "StaticRank":
                    return IndexFieldType.StaticRank;
                case "Url":
                    return IndexFieldType.Url;
                case "ImageUrl":
                    return IndexFieldType.ImageUrl;
                case "Title":
                    return IndexFieldType.Title;
                case "Description":
                    return IndexFieldType.Description;
                case "Category":
                    return IndexFieldType.Category;
                case "Price":
                    return IndexFieldType.Price;
                case "Rating":
                    return IndexFieldType.Rating;
                case "Brand":
                    return IndexFieldType.Brand;
                case "Model":
                    return IndexFieldType.Model;
                case "Color":
                    return IndexFieldType.Color;
                case "Size":
                    return IndexFieldType.Size;
                case "Material":
                    return IndexFieldType.Material;
                case "Gender":
                    return IndexFieldType.Gender;
                case "AgeGroup":
                    return IndexFieldType.AgeGroup;
                case "Array":
                    return IndexFieldType.Array;
                case "Dictionary":
                    return IndexFieldType.Dictionary;
                case "ExcludeFlag":
                    return IndexFieldType.ExcludeFlag;
                case "Identifier":
                    return IndexFieldType.Identifier;
                case "Object":
                    return IndexFieldType.Object;
                case "DocumentId":
                    return IndexFieldType.DocumentId;
                case "Author":
                    return IndexFieldType.Author;
                case "CreatedAt":
                    return IndexFieldType.CreatedAt;
                case "ModifiedAt":
                    return IndexFieldType.ModifiedAt;
                case "Paragraph":
                    return IndexFieldType.Paragraph;
                case "SubHeading":
                    return IndexFieldType.SubHeading;
                case "SectionHeader":
                    return IndexFieldType.SectionHeader;
                case "Address":
                    return IndexFieldType.Address;
                case "RatingCount":
                    return IndexFieldType.RatingCount;
                case "ReviewCount":
                    return IndexFieldType.ReviewCount;
                case "RatingScale":
                    return IndexFieldType.RatingScale;
                case "Amenities":
                    return IndexFieldType.Amenities;
                case "StreetAddress":
                    return IndexFieldType.StreetAddress;
                case "Locality":
                    return IndexFieldType.Locality;
                case "SubRegion":
                    return IndexFieldType.SubRegion;
                case "AddressRegion":
                    return IndexFieldType.AddressRegion;
                case "PostalCode":
                    return IndexFieldType.PostalCode;
                case "PostOfficeBoxNumber":
                    return IndexFieldType.PostOfficeBoxNumber;
                case "Country":
                    return IndexFieldType.Country;
                case "CountryIso":
                    return IndexFieldType.CountryIso;
                case "Neighborhood":
                    return IndexFieldType.Neighborhood;
                case "OtherAreas":
                    return IndexFieldType.OtherAreas;
                case "PhoneNumber":
                    return IndexFieldType.PhoneNumber;
                case "Barcode":
                    return IndexFieldType.Barcode;
                case "SecondaryImageUrls":
                    return IndexFieldType.SecondaryImageUrls;
            }
            return null;
        }
    }
}
