// Copyright (c) Microsoft Corporation.
// Licensed under the MIT license.

// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Bing.Commerce.Search.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Defines a geographical boundary that matches location within a certain
    /// euclidean distance from a point.
    /// </summary>
    public partial class GeoDistance : GeoBoundaryBase
    {
        /// <summary>
        /// Initializes a new instance of the GeoDistance class.
        /// </summary>
        public GeoDistance()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the GeoDistance class.
        /// </summary>
        /// <param name="center">The geo-location for the center point to match
        /// around.</param>
        /// <param name="radius">The accpeptable euclidean distance to the
        /// center.</param>
        public GeoDistance(GeoPoint center = default(GeoPoint), double? radius = default(double?))
        {
            Center = center;
            Radius = radius;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the geo-location for the center point to match around.
        /// </summary>
        [JsonProperty(PropertyName = "center")]
        public GeoPoint Center { get; set; }

        /// <summary>
        /// Gets or sets the accpeptable euclidean distance to the center.
        /// </summary>
        [JsonProperty(PropertyName = "radius")]
        public double? Radius { get; set; }

    }
}
